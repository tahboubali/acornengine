# GNU Make project makefile autogenerated by Premake

ifndef config
  config=release_arm
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
INCLUDES += -I../../bx/include -I../../bimg/include -I../../bimg/3rdparty/astc-encoder/include -I../../bimg/3rdparty/astc-encoder/source -I../../bx/include/compat/osx
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS +=
LDDEPS +=
ALL_LDFLAGS += $(LDFLAGS)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),release_arm)
TARGETDIR = bin/ARM/Release
TARGET = $(TARGETDIR)/libbimg.a
OBJDIR = obj/ARM/Release/bimg
DEFINES += -DNDEBUG -DBX_CONFIG_DEBUG=0
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O3 -x objective-c++
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O3 -std=c++17 -fno-exceptions -fno-rtti -x objective-c++

else ifeq ($(config),debug_arm)
TARGETDIR = bin/ARM/Debug
TARGET = $(TARGETDIR)/libbimg.a
OBJDIR = obj/ARM/Debug/bimg
DEFINES += -D_DEBUG -DBX_CONFIG_DEBUG=1
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -Og -g -x objective-c++
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -Og -g -std=c++17 -fno-exceptions -fno-rtti -x objective-c++

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/astcenc_averages_and_directions.o
GENERATED += $(OBJDIR)/astcenc_block_sizes.o
GENERATED += $(OBJDIR)/astcenc_color_quantize.o
GENERATED += $(OBJDIR)/astcenc_color_unquantize.o
GENERATED += $(OBJDIR)/astcenc_compress_symbolic.o
GENERATED += $(OBJDIR)/astcenc_compute_variance.o
GENERATED += $(OBJDIR)/astcenc_decompress_symbolic.o
GENERATED += $(OBJDIR)/astcenc_diagnostic_trace.o
GENERATED += $(OBJDIR)/astcenc_entry.o
GENERATED += $(OBJDIR)/astcenc_find_best_partitioning.o
GENERATED += $(OBJDIR)/astcenc_ideal_endpoints_and_weights.o
GENERATED += $(OBJDIR)/astcenc_image.o
GENERATED += $(OBJDIR)/astcenc_integer_sequence.o
GENERATED += $(OBJDIR)/astcenc_mathlib.o
GENERATED += $(OBJDIR)/astcenc_mathlib_softfloat.o
GENERATED += $(OBJDIR)/astcenc_partition_tables.o
GENERATED += $(OBJDIR)/astcenc_percentile_tables.o
GENERATED += $(OBJDIR)/astcenc_pick_best_endpoint_format.o
GENERATED += $(OBJDIR)/astcenc_quantization.o
GENERATED += $(OBJDIR)/astcenc_symbolic_physical.o
GENERATED += $(OBJDIR)/astcenc_weight_align.o
GENERATED += $(OBJDIR)/astcenc_weight_quant_xfer_tables.o
GENERATED += $(OBJDIR)/image.o
GENERATED += $(OBJDIR)/image_gnf.o
OBJECTS += $(OBJDIR)/astcenc_averages_and_directions.o
OBJECTS += $(OBJDIR)/astcenc_block_sizes.o
OBJECTS += $(OBJDIR)/astcenc_color_quantize.o
OBJECTS += $(OBJDIR)/astcenc_color_unquantize.o
OBJECTS += $(OBJDIR)/astcenc_compress_symbolic.o
OBJECTS += $(OBJDIR)/astcenc_compute_variance.o
OBJECTS += $(OBJDIR)/astcenc_decompress_symbolic.o
OBJECTS += $(OBJDIR)/astcenc_diagnostic_trace.o
OBJECTS += $(OBJDIR)/astcenc_entry.o
OBJECTS += $(OBJDIR)/astcenc_find_best_partitioning.o
OBJECTS += $(OBJDIR)/astcenc_ideal_endpoints_and_weights.o
OBJECTS += $(OBJDIR)/astcenc_image.o
OBJECTS += $(OBJDIR)/astcenc_integer_sequence.o
OBJECTS += $(OBJDIR)/astcenc_mathlib.o
OBJECTS += $(OBJDIR)/astcenc_mathlib_softfloat.o
OBJECTS += $(OBJDIR)/astcenc_partition_tables.o
OBJECTS += $(OBJDIR)/astcenc_percentile_tables.o
OBJECTS += $(OBJDIR)/astcenc_pick_best_endpoint_format.o
OBJECTS += $(OBJDIR)/astcenc_quantization.o
OBJECTS += $(OBJDIR)/astcenc_symbolic_physical.o
OBJECTS += $(OBJDIR)/astcenc_weight_align.o
OBJECTS += $(OBJDIR)/astcenc_weight_quant_xfer_tables.o
OBJECTS += $(OBJDIR)/image.o
OBJECTS += $(OBJDIR)/image_gnf.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking bimg
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning bimg
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/astcenc_averages_and_directions.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_averages_and_directions.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_block_sizes.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_block_sizes.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_color_quantize.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_color_quantize.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_color_unquantize.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_color_unquantize.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_compress_symbolic.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_compress_symbolic.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_compute_variance.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_compute_variance.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_decompress_symbolic.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_decompress_symbolic.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_diagnostic_trace.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_diagnostic_trace.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_entry.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_entry.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_find_best_partitioning.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_find_best_partitioning.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_ideal_endpoints_and_weights.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_ideal_endpoints_and_weights.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_image.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_integer_sequence.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_integer_sequence.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_mathlib.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_mathlib.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_mathlib_softfloat.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_mathlib_softfloat.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_partition_tables.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_partition_tables.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_percentile_tables.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_percentile_tables.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_pick_best_endpoint_format.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_pick_best_endpoint_format.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_quantization.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_quantization.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_symbolic_physical.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_symbolic_physical.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_weight_align.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_weight_align.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/astcenc_weight_quant_xfer_tables.o: ../../bimg/3rdparty/astc-encoder/source/astcenc_weight_quant_xfer_tables.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/image.o: ../../bimg/src/image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/image_gnf.o: ../../bimg/src/image_gnf.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif